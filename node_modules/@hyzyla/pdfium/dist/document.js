"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PDFiumDocument = void 0;
const page_1 = require("./page");
class PDFiumDocument {
    constructor(options) {
        this.module = options.module;
        this.documentPtr = options.documentPtr;
        this.documentIdx = options.documentIdx;
    }
    /**
     * Get a page from the document by its index. The index is zero-based.
     */
    getPage(pageIndex) {
        const page = this.module._FPDF_LoadPage(this.documentIdx, pageIndex);
        return new page_1.PDFiumPage({
            module: this.module,
            pageIdx: page,
            documentIdx: this.documentIdx,
            pageIndex: pageIndex,
        });
    }
    /**
     * User-friendly iterator to iterate over all pages in the document.
     */
    *pages() {
        const pageCount = this.getPageCount();
        for (let i = 0; i < pageCount; i++) {
            yield this.getPage(i);
        }
    }
    /**
     * Get the number of pages in the document.
     */
    getPageCount() {
        return this.module._FPDF_GetPageCount(this.documentIdx);
    }
    /**
     * After you're done with the document, you should destroy it to free the memory.
     *
     * Otherwise, you'll be fired from your job for causing a memory leak. ðŸ˜±
     */
    destroy() {
        this.module._FPDF_CloseDocument(this.documentIdx);
        this.module.wasmExports.free(this.documentPtr);
    }
}
exports.PDFiumDocument = PDFiumDocument;
